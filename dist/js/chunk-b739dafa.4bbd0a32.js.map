{"version":3,"sources":["webpack:///../../../src/components/VGrid/VRow.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/components/VMenu/VMenu.ts","webpack:///../../../src/mixins/menuable/index.ts"],"names":["breakpoints","ALIGNMENT","makeProps","props","prefix","def","alignValidator","str","alignProps","type","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","justify","alignContent","classMap","breakpointClass","className","val","breakpoint","prop","cache","name","functional","tag","dense","noGutters","render","children","cacheKey","String","classList","value","h","data","staticClass","class","valueComparator","baseMixins","directives","ClickOutside","Resize","provide","isInMenu","theme","this","auto","closeOnClick","closeOnContentClick","disabled","disableKeys","maxHeight","Number","offsetX","offsetY","openOnClick","openOnHover","origin","transition","Boolean","calculatedTopAuto","defaultOffset","hasJustFocused","listIndex","resizeTimeout","selectedIndex","tiles","computed","activeTile","calculatedLeft","menuWidth","Math","dimensions","content","parseFloat","calcXOverflow","calcLeft","calculatedMaxHeight","height","calculatedMaxWidth","calculatedMinWidth","minWidth","activator","width","pageWidth","isNaN","parseInt","calculatedTop","top","calcYOverflow","hasClickableTiles","find","tile","styles","maxWidth","left","transformOrigin","zIndex","activeZIndex","watch","isActive","isContentActive","next","prev","remove","created","$attrs","hasOwnProperty","mounted","methods","activate","requestAnimationFrame","calcScrollPosition","$el","$refs","maxScrollTop","calcLeftAuto","calcTopAuto","Array","tileDistanceFromMenuTop","firstTileOffsetTop","computedTop","changeListIndex","e","closeConditional","target","contains","genActivatorAttributes","attributes","id","genActivatorListeners","listeners","genTransition","$createElement","genDirectives","handler","include","genContent","options","attrs","role","menuable__content__active","contentClass","style","ref","on","click","keydown","onKeyDown","$listeners","getTiles","querySelectorAll","mouseEnterHandler","mouseLeaveHandler","nextTile","prevTile","lastTile","length","firstTile","setTimeout","onResize","clearTimeout","window","attach","arg","showLazyContent","root","light","dark","allowOverflow","nudgeBottom","nudgeLeft","nudgeRight","nudgeTop","nudgeWidth","offsetOverflow","positionX","positionY","absoluteX","absoluteY","activatedBy","activatorFixed","bottom","right","offsetTop","scrollHeight","offsetLeft","hasWindow","inputActivator","pageYOffset","stackClass","stackMinZIndex","computedLeft","a","c","activatorLeft","hasActivator","$slots","$scopedSlots","beforeMount","absolutePosition","calcTop","xOverflow","documentHeight","toTop","contentHeight","totalHeight","isOverflowing","callActivate","callDeactivate","checkForPageYOffset","checkActivatorFixed","el","deactivate","onClick","getInnerHeight","document","getOffsetLeft","getOffsetTop","getRoundedBoundedClientRect","rect","measure","sneakPeek","cb","startTransition","Promise","resolve","updateDimensions"],"mappings":"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","file":"js/chunk-b739dafa.4bbd0a32.js","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as PropValidator<typeof deepEqual>,\n  },\n})\n","// Styles\nimport './VMenu.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Delayable from '../../mixins/delayable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Menuable from '../../mixins/menuable'\nimport Returnable from '../../mixins/returnable'\nimport Roundable from '../../mixins/roundable'\nimport Toggleable from '../../mixins/toggleable'\nimport Themeable from '../../mixins/themeable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\nimport Resize from '../../directives/resize'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeDirective, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Dependent,\n  Delayable,\n  Detachable,\n  Menuable,\n  Returnable,\n  Roundable,\n  Toggleable,\n  Themeable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-menu',\n\n  directives: {\n    ClickOutside,\n    Resize,\n  },\n\n  provide (): object {\n    return {\n      isInMenu: true,\n      // Pass theme through to default slot\n      theme: this.theme,\n    }\n  },\n\n  props: {\n    auto: Boolean,\n    closeOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    closeOnContentClick: {\n      type: Boolean,\n      default: true,\n    },\n    disabled: Boolean,\n    disableKeys: Boolean,\n    maxHeight: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    offsetX: Boolean,\n    offsetY: Boolean,\n    openOnClick: {\n      type: Boolean,\n      default: true,\n    },\n    openOnHover: Boolean,\n    origin: {\n      type: String,\n      default: 'top left',\n    },\n    transition: {\n      type: [Boolean, String],\n      default: 'v-menu-transition',\n    },\n  },\n\n  data () {\n    return {\n      calculatedTopAuto: 0,\n      defaultOffset: 8,\n      hasJustFocused: false,\n      listIndex: -1,\n      resizeTimeout: 0,\n      selectedIndex: null as null | number,\n      tiles: [] as HTMLElement[],\n    }\n  },\n\n  computed: {\n    activeTile (): HTMLElement | undefined {\n      return this.tiles[this.listIndex]\n    },\n    calculatedLeft (): string {\n      const menuWidth = Math.max(this.dimensions.content.width, parseFloat(this.calculatedMinWidth))\n\n      if (!this.auto) return this.calcLeft(menuWidth) || '0'\n\n      return convertToUnit(this.calcXOverflow(this.calcLeftAuto(), menuWidth)) || '0'\n    },\n    calculatedMaxHeight (): string {\n      const height = this.auto\n        ? '200px'\n        : convertToUnit(this.maxHeight)\n\n      return height || '0'\n    },\n    calculatedMaxWidth (): string {\n      return convertToUnit(this.maxWidth) || '0'\n    },\n    calculatedMinWidth (): string {\n      if (this.minWidth) {\n        return convertToUnit(this.minWidth) || '0'\n      }\n\n      const minWidth = Math.min(\n        this.dimensions.activator.width +\n        Number(this.nudgeWidth) +\n        (this.auto ? 16 : 0),\n        Math.max(this.pageWidth - 24, 0)\n      )\n\n      const calculatedMaxWidth = isNaN(parseInt(this.calculatedMaxWidth))\n        ? minWidth\n        : parseInt(this.calculatedMaxWidth)\n\n      return convertToUnit(Math.min(\n        calculatedMaxWidth,\n        minWidth\n      )) || '0'\n    },\n    calculatedTop (): string {\n      const top = !this.auto\n        ? this.calcTop()\n        : convertToUnit(this.calcYOverflow(this.calculatedTopAuto))\n\n      return top || '0'\n    },\n    hasClickableTiles (): boolean {\n      return Boolean(this.tiles.find(tile => tile.tabIndex > -1))\n    },\n    styles (): object {\n      return {\n        maxHeight: this.calculatedMaxHeight,\n        minWidth: this.calculatedMinWidth,\n        maxWidth: this.calculatedMaxWidth,\n        top: this.calculatedTop,\n        left: this.calculatedLeft,\n        transformOrigin: this.origin,\n        zIndex: this.zIndex || this.activeZIndex,\n      }\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (!val) this.listIndex = -1\n    },\n    isContentActive (val) {\n      this.hasJustFocused = val\n    },\n    listIndex (next, prev) {\n      if (next in this.tiles) {\n        const tile = this.tiles[next]\n        tile.classList.add('v-list-item--highlighted')\n        this.$refs.content.scrollTop = tile.offsetTop - tile.clientHeight\n      }\n\n      prev in this.tiles &&\n        this.tiles[prev].classList.remove('v-list-item--highlighted')\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  mounted () {\n    this.isActive && this.callActivate()\n  },\n\n  methods: {\n    activate () {\n      // Update coordinates and dimensions of menu\n      // and its activator\n      this.updateDimensions()\n      // Start the transition\n      requestAnimationFrame(() => {\n        // Once transitioning, calculate scroll and top position\n        this.startTransition().then(() => {\n          if (this.$refs.content) {\n            this.calculatedTopAuto = this.calcTopAuto()\n            this.auto && (this.$refs.content.scrollTop = this.calcScrollPosition())\n          }\n        })\n      })\n    },\n    calcScrollPosition () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement\n      const maxScrollTop = $el.scrollHeight - $el.offsetHeight\n\n      return activeTile\n        ? Math.min(maxScrollTop, Math.max(0, activeTile.offsetTop - $el.offsetHeight / 2 + activeTile.offsetHeight / 2))\n        : $el.scrollTop\n    },\n    calcLeftAuto () {\n      return parseInt(this.dimensions.activator.left - this.defaultOffset * 2)\n    },\n    calcTopAuto () {\n      const $el = this.$refs.content\n      const activeTile = $el.querySelector('.v-list-item--active') as HTMLElement | null\n\n      if (!activeTile) {\n        this.selectedIndex = null\n      }\n\n      if (this.offsetY || !activeTile) {\n        return this.computedTop\n      }\n\n      this.selectedIndex = Array.from(this.tiles).indexOf(activeTile)\n\n      const tileDistanceFromMenuTop = activeTile.offsetTop - this.calcScrollPosition()\n      const firstTileOffsetTop = ($el.querySelector('.v-list-item') as HTMLElement).offsetTop\n\n      return this.computedTop - tileDistanceFromMenuTop - firstTileOffsetTop - 1\n    },\n    changeListIndex (e: KeyboardEvent) {\n      // For infinite scroll and autocomplete, re-evaluate children\n      this.getTiles()\n\n      if (!this.isActive || !this.hasClickableTiles) {\n        return\n      } else if (e.keyCode === keyCodes.tab) {\n        this.isActive = false\n        return\n      } else if (e.keyCode === keyCodes.down) {\n        this.nextTile()\n      } else if (e.keyCode === keyCodes.up) {\n        this.prevTile()\n      } else if (e.keyCode === keyCodes.end) {\n        this.lastTile()\n      } else if (e.keyCode === keyCodes.home) {\n        this.firstTile()\n      } else if (e.keyCode === keyCodes.enter && this.listIndex !== -1) {\n        this.tiles[this.listIndex].click()\n      } else { return }\n      // One of the conditions was met, prevent default action (#2988)\n      e.preventDefault()\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n\n      return this.isActive &&\n        !this._isDestroyed &&\n        this.closeOnClick &&\n        !this.$refs.content.contains(target)\n    },\n    genActivatorAttributes () {\n      const attributes = Activatable.options.methods.genActivatorAttributes.call(this)\n\n      if (this.activeTile && this.activeTile.id) {\n        return {\n          ...attributes,\n          'aria-activedescendant': this.activeTile.id,\n        }\n      }\n\n      return attributes\n    },\n    genActivatorListeners () {\n      const listeners = Menuable.options.methods.genActivatorListeners.call(this)\n\n      if (!this.disableKeys) {\n        listeners.keydown = this.onKeyDown\n      }\n\n      return listeners\n    },\n    genTransition (): VNode {\n      const content = this.genContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n        },\n      }, [content])\n    },\n    genDirectives (): VNodeDirective[] {\n      const directives: VNodeDirective[] = [{\n        name: 'show',\n        value: this.isContentActive,\n      }]\n\n      // Do not add click outside for hover menu\n      if (!this.openOnHover && this.closeOnClick) {\n        directives.push({\n          name: 'click-outside',\n          value: {\n            handler: () => { this.isActive = false },\n            closeConditional: this.closeConditional,\n            include: () => [this.$el, ...this.getOpenDependentElements()],\n          },\n        })\n      }\n\n      return directives\n    },\n    genContent (): VNode {\n      const options = {\n        attrs: {\n          ...this.getScopeIdAttrs(),\n          role: 'role' in this.$attrs ? this.$attrs.role : 'menu',\n        },\n        staticClass: 'v-menu__content',\n        class: {\n          ...this.rootThemeClasses,\n          ...this.roundedClasses,\n          'v-menu__content--auto': this.auto,\n          'v-menu__content--fixed': this.activatorFixed,\n          menuable__content__active: this.isActive,\n          [this.contentClass.trim()]: true,\n        },\n        style: this.styles,\n        directives: this.genDirectives(),\n        ref: 'content',\n        on: {\n          click: (e: Event) => {\n            const target = e.target as HTMLElement\n\n            if (target.getAttribute('disabled')) return\n            if (this.closeOnContentClick) this.isActive = false\n          },\n          keydown: this.onKeyDown,\n        },\n      } as VNodeData\n\n      if (this.$listeners.scroll) {\n        options.on = options.on || {}\n        options.on.scroll = this.$listeners.scroll\n      }\n\n      if (!this.disabled && this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseenter = this.mouseEnterHandler\n      }\n\n      if (this.openOnHover) {\n        options.on = options.on || {}\n        options.on.mouseleave = this.mouseLeaveHandler\n      }\n\n      return this.$createElement('div', options, this.getContentSlot())\n    },\n    getTiles () {\n      if (!this.$refs.content) return\n\n      this.tiles = Array.from(this.$refs.content.querySelectorAll('.v-list-item'))\n    },\n    mouseEnterHandler () {\n      this.runDelay('open', () => {\n        if (this.hasJustFocused) return\n\n        this.hasJustFocused = true\n      })\n    },\n    mouseLeaveHandler (e: MouseEvent) {\n      // Prevent accidental re-activation\n      this.runDelay('close', () => {\n        if (this.$refs.content.contains(e.relatedTarget as HTMLElement)) return\n\n        requestAnimationFrame(() => {\n          this.isActive = false\n          this.callDeactivate()\n        })\n      })\n    },\n    nextTile () {\n      const tile = this.tiles[this.listIndex + 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = -1\n        this.nextTile()\n\n        return\n      }\n\n      this.listIndex++\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    prevTile () {\n      const tile = this.tiles[this.listIndex - 1]\n\n      if (!tile) {\n        if (!this.tiles.length) return\n\n        this.listIndex = this.tiles.length\n        this.prevTile()\n\n        return\n      }\n\n      this.listIndex--\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    lastTile () {\n      const tile = this.tiles[this.tiles.length - 1]\n\n      if (!tile) return\n\n      this.listIndex = this.tiles.length - 1\n\n      if (tile.tabIndex === -1) this.prevTile()\n    },\n    firstTile () {\n      const tile = this.tiles[0]\n\n      if (!tile) return\n\n      this.listIndex = 0\n\n      if (tile.tabIndex === -1) this.nextTile()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc) {\n        // Wait for dependent elements to close first\n        setTimeout(() => { this.isActive = false })\n        const activator = this.getActivator()\n        this.$nextTick(() => activator && activator.focus())\n      } else if (\n        !this.isActive &&\n        [keyCodes.up, keyCodes.down].includes(e.keyCode)\n      ) {\n        this.isActive = true\n      }\n\n      // Allow for isActive watcher to generate tile list\n      this.$nextTick(() => this.changeListIndex(e))\n    },\n    onResize () {\n      if (!this.isActive) return\n\n      // Account for screen resize\n      // and orientation change\n      // eslint-disable-next-line no-unused-expressions\n      this.$refs.content.offsetWidth\n      this.updateDimensions()\n\n      // When resizing to a smaller width\n      // content width is evaluated before\n      // the new activator width has been\n      // set, causing it to not size properly\n      // hacky but will revisit in the future\n      clearTimeout(this.resizeTimeout)\n      this.resizeTimeout = window.setTimeout(this.updateDimensions, 100)\n    },\n  },\n\n  render (h): VNode {\n    const data = {\n      staticClass: 'v-menu',\n      class: {\n        'v-menu--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      directives: [{\n        arg: '500',\n        name: 'resize',\n        value: this.onResize,\n      }],\n    }\n\n    return h('div', data, [\n      !this.activator && this.genActivator(),\n      this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [this.genTransition()]),\n      ]),\n    ])\n  },\n})\n","// Mixins\nimport Positionable from '../positionable'\nimport Stackable from '../stackable'\nimport Activatable from '../activatable'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { convertToUnit } from '../../util/helpers'\n\n// Types\nconst baseMixins = mixins(\n  Stackable,\n  Positionable,\n  Activatable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  attach: boolean | string | Element\n  offsetY: boolean\n  offsetX: boolean\n  $refs: {\n    content: HTMLElement\n    activator: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'menuable',\n\n  props: {\n    allowOverflow: Boolean,\n    light: Boolean,\n    dark: Boolean,\n    maxWidth: {\n      type: [Number, String],\n      default: 'auto',\n    },\n    minWidth: [Number, String],\n    nudgeBottom: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeLeft: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeRight: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeTop: {\n      type: [Number, String],\n      default: 0,\n    },\n    nudgeWidth: {\n      type: [Number, String],\n      default: 0,\n    },\n    offsetOverflow: Boolean,\n    openOnClick: Boolean,\n    positionX: {\n      type: Number,\n      default: null,\n    },\n    positionY: {\n      type: Number,\n      default: null,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: null,\n    },\n  },\n\n  data: () => ({\n    absoluteX: 0,\n    absoluteY: 0,\n    activatedBy: null as EventTarget | null,\n    activatorFixed: false,\n    dimensions: {\n      activator: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n        offsetLeft: 0,\n      },\n      content: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        width: 0,\n        height: 0,\n        offsetTop: 0,\n        scrollHeight: 0,\n      },\n    },\n    hasJustFocused: false,\n    hasWindow: false,\n    inputActivator: false,\n    isContentActive: false,\n    pageWidth: 0,\n    pageYOffset: 0,\n    stackClass: 'v-menu__content--active',\n    stackMinZIndex: 6,\n  }),\n\n  computed: {\n    computedLeft () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      const activatorLeft = (this.attach !== false ? a.offsetLeft : a.left) || 0\n      const minWidth = Math.max(a.width, c.width)\n      let left = 0\n      left += this.left ? activatorLeft - (minWidth - a.width) : activatorLeft\n      if (this.offsetX) {\n        const maxWidth = isNaN(Number(this.maxWidth))\n          ? a.width\n          : Math.min(a.width, Number(this.maxWidth))\n\n        left += this.left ? -maxWidth : a.width\n      }\n      if (this.nudgeLeft) left -= parseInt(this.nudgeLeft)\n      if (this.nudgeRight) left += parseInt(this.nudgeRight)\n\n      return left\n    },\n    computedTop () {\n      const a = this.dimensions.activator\n      const c = this.dimensions.content\n      let top = 0\n\n      if (this.top) top += a.height - c.height\n      if (this.attach !== false) top += a.offsetTop\n      else top += a.top + this.pageYOffset\n      if (this.offsetY) top += this.top ? -a.height : a.height\n      if (this.nudgeTop) top -= parseInt(this.nudgeTop)\n      if (this.nudgeBottom) top += parseInt(this.nudgeBottom)\n\n      return top\n    },\n    hasActivator (): boolean {\n      return !!this.$slots.activator || !!this.$scopedSlots.activator || !!this.activator || !!this.inputActivator\n    },\n  },\n\n  watch: {\n    disabled (val) {\n      val && this.callDeactivate()\n    },\n    isActive (val) {\n      if (this.disabled) return\n\n      val ? this.callActivate() : this.callDeactivate()\n    },\n    positionX: 'updateDimensions',\n    positionY: 'updateDimensions',\n  },\n\n  beforeMount () {\n    this.hasWindow = typeof window !== 'undefined'\n  },\n\n  methods: {\n    absolutePosition () {\n      return {\n        offsetTop: 0,\n        offsetLeft: 0,\n        scrollHeight: 0,\n        top: this.positionY || this.absoluteY,\n        bottom: this.positionY || this.absoluteY,\n        left: this.positionX || this.absoluteX,\n        right: this.positionX || this.absoluteX,\n        height: 0,\n        width: 0,\n      }\n    },\n    activate () {},\n    calcLeft (menuWidth: number) {\n      return convertToUnit(this.attach !== false\n        ? this.computedLeft\n        : this.calcXOverflow(this.computedLeft, menuWidth))\n    },\n    calcTop () {\n      return convertToUnit(this.attach !== false\n        ? this.computedTop\n        : this.calcYOverflow(this.computedTop))\n    },\n    calcXOverflow (left: number, menuWidth: number) {\n      const xOverflow = left + menuWidth - this.pageWidth + 12\n\n      if ((!this.left || this.right) && xOverflow > 0) {\n        left = Math.max(left - xOverflow, 0)\n      } else {\n        left = Math.max(left, 12)\n      }\n\n      return left + this.getOffsetLeft()\n    },\n    calcYOverflow (top: number) {\n      const documentHeight = this.getInnerHeight()\n      const toTop = this.pageYOffset + documentHeight\n      const activator = this.dimensions.activator\n      const contentHeight = this.dimensions.content.height\n      const totalHeight = top + contentHeight\n      const isOverflowing = toTop < totalHeight\n\n      // If overflowing bottom and offset\n      // TODO: set 'bottom' position instead of 'top'\n      if (isOverflowing &&\n        this.offsetOverflow &&\n        // If we don't have enough room to offset\n        // the overflow, don't offset\n        activator.top > contentHeight\n      ) {\n        top = this.pageYOffset + (activator.top - contentHeight)\n      // If overflowing bottom\n      } else if (isOverflowing && !this.allowOverflow) {\n        top = toTop - contentHeight - 12\n      // If overflowing top\n      } else if (top < this.pageYOffset && !this.allowOverflow) {\n        top = this.pageYOffset + 12\n      }\n\n      return top < 12 ? 12 : top\n    },\n    callActivate () {\n      if (!this.hasWindow) return\n\n      this.activate()\n    },\n    callDeactivate () {\n      this.isContentActive = false\n\n      this.deactivate()\n    },\n    checkForPageYOffset () {\n      if (this.hasWindow) {\n        this.pageYOffset = this.activatorFixed ? 0 : this.getOffsetTop()\n      }\n    },\n    checkActivatorFixed () {\n      if (this.attach !== false) return\n      let el = this.getActivator()\n      while (el) {\n        if (window.getComputedStyle(el).position === 'fixed') {\n          this.activatorFixed = true\n          return\n        }\n        el = el.offsetParent as HTMLElement\n      }\n      this.activatorFixed = false\n    },\n    deactivate () {},\n    genActivatorListeners () {\n      const listeners = Activatable.options.methods.genActivatorListeners.call(this)\n\n      const onClick = listeners.click\n\n      listeners.click = (e: MouseEvent & KeyboardEvent & FocusEvent) => {\n        if (this.openOnClick) {\n          onClick && onClick(e)\n        }\n\n        this.absoluteX = e.clientX\n        this.absoluteY = e.clientY\n      }\n\n      return listeners\n    },\n    getInnerHeight () {\n      if (!this.hasWindow) return 0\n\n      return window.innerHeight ||\n        document.documentElement.clientHeight\n    },\n    getOffsetLeft () {\n      if (!this.hasWindow) return 0\n\n      return window.pageXOffset ||\n        document.documentElement.scrollLeft\n    },\n    getOffsetTop () {\n      if (!this.hasWindow) return 0\n\n      return window.pageYOffset ||\n        document.documentElement.scrollTop\n    },\n    getRoundedBoundedClientRect (el: Element) {\n      const rect = el.getBoundingClientRect()\n      return {\n        top: Math.round(rect.top),\n        left: Math.round(rect.left),\n        bottom: Math.round(rect.bottom),\n        right: Math.round(rect.right),\n        width: Math.round(rect.width),\n        height: Math.round(rect.height),\n      }\n    },\n    measure (el: HTMLElement) {\n      if (!el || !this.hasWindow) return null\n\n      const rect = this.getRoundedBoundedClientRect(el)\n\n      // Account for activator margin\n      if (this.attach !== false) {\n        const style = window.getComputedStyle(el)\n\n        rect.left = parseInt(style.marginLeft!)\n        rect.top = parseInt(style.marginTop!)\n      }\n\n      return rect\n    },\n    sneakPeek (cb: () => void) {\n      requestAnimationFrame(() => {\n        const el = this.$refs.content\n\n        if (!el || el.style.display !== 'none') {\n          cb()\n          return\n        }\n\n        el.style.display = 'inline-block'\n        cb()\n        el.style.display = 'none'\n      })\n    },\n    startTransition () {\n      return new Promise<void>(resolve => requestAnimationFrame(() => {\n        this.isContentActive = this.hasJustFocused = this.isActive\n        resolve()\n      }))\n    },\n    updateDimensions () {\n      this.hasWindow = typeof window !== 'undefined'\n      this.checkActivatorFixed()\n      this.checkForPageYOffset()\n      this.pageWidth = document.documentElement.clientWidth\n\n      const dimensions: any = {\n        activator: { ...this.dimensions.activator },\n        content: { ...this.dimensions.content },\n      }\n\n      // Activator should already be shown\n      if (!this.hasActivator || this.absolute) {\n        dimensions.activator = this.absolutePosition()\n      } else {\n        const activator = this.getActivator()\n        if (!activator) return\n\n        dimensions.activator = this.measure(activator)\n        dimensions.activator.offsetLeft = activator.offsetLeft\n        if (this.attach !== false) {\n          // account for css padding causing things to not line up\n          // this is mostly for v-autocomplete, hopefully it won't break anything\n          dimensions.activator.offsetTop = activator.offsetTop\n        } else {\n          dimensions.activator.offsetTop = 0\n        }\n      }\n\n      // Display and hide to get dimensions\n      this.sneakPeek(() => {\n        this.$refs.content && (dimensions.content = this.measure(this.$refs.content))\n\n        this.dimensions = dimensions\n      })\n    },\n  },\n})\n"],"sourceRoot":""}